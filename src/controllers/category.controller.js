import Category from "../models/Category.js";
import { getIO } from "../config/websocket.js";

export const getAllCategories = async (req, res) => {
  try {
    const categories = await Category.find();
    res.json(categories);
  } catch (error) {
    res.status(500).json({ message: "L·ªói server", error });
  }
};

export const createCategory = async (req, res) => {
  try {
    const { name, description } = req.body;
    await Category.create({ name, description });

    getIO().emit("categoryCreated", { message: "T·∫°o category th√†nh c√¥ng!" });
    return res.status(201).json({ message: "T·∫°o th√†nh c√¥ng!" });
  } catch (error) {
    res.status(500).json({ message: "L·ªói server", error });
  }
};

// üü° C·∫≠p nh·∫≠t Category
export const updateCategory = async (req, res) => {
  try {
    const { id } = req.params;
    const updatedCategory = await Category.findByIdAndUpdate(id, req.body, {
      new: true,
    });

    if (!updatedCategory) {
      return res.status(404).json({ message: "Category kh√¥ng t·ªìn t·∫°i" });
    }

    getIO().emit("categoryUpdated", { message: "S·ª≠a category th√†nh c√¥ng!" });
    res.json({ message: "S·ª≠a th√†nh c√¥ng!" });
  } catch (error) {
    res.status(500).json({ message: "L·ªói server", error });
  }
};

export const deleteCategory = async (req, res) => {
  try {
    const { id } = req.params;
    const category = await Category.findByIdAndDelete(id);

    if (!category) {
      return res.status(404).json({ message: "Category kh√¥ng t·ªìn t·∫°i" });
    }

    getIO().emit("categoryDeleted", { message: "Xo√° category th√†nh c√¥ng!" });
    res.json({ message: "X√≥a category th√†nh c√¥ng" });
  } catch (error) {
    res.status(500).json({ message: "L·ªói server", error });
  }
};
